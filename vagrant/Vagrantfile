# -*- mode: ruby -*-
# vi: set ft=ruby :

# The project to control the maschiene in the cloud via Ansible.

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
	# The most common configuration options are documented and commented below.
	# For a complete reference, please see the online documentation at
	# https://docs.vagrantup.com.

	# Every Vagrant development environment requires a box. You can search for
	# boxes at https://vagrantcloud.com/search.
	config.vm.box = "boxcutter/ubuntu1604"

	# The url from where the 'config.vm.box' box will be fetched if it
	# doesn't already exist on the user's system.
	config.vm.box_url = "https://app.vagrantup.com/boxcutter/boxes/ubuntu1604"

	# memory increase
	config.vm.provider "virtualbox" do |v|
		v.name = "webapp-tutorial2"
        v.memory = 8964
        v.cpus = 4
		# Display the VirtualBox GUI when booting the machine
		v.gui = true
		# enable shared clipboard
		v.customize ['modifyvm', :id, '--clipboard', 'bidirectional'] 
    end
					  
	PATH_VAGRANT_PROJECT=File.dirname(__FILE__)
	
	
	
	###############
	#####  LOCAL PROVISIONERS INSTEAD OF DOWNLOAD
		  
	# Use shell script to provision
	config.vm.provision "shell", inline: <<-SHELL
			
	
		# update
		apt-get update	
		

		# switch to German keyboard layout
		sudo sed -i 's/"us"/"de"/g' /etc/default/keyboard
		sudo DEBIAN_FRONTEND=noninteractive apt-get install -y console-common
		sudo install-keymap de		
		
		
		# install node & js tools
		sudo apt-get install -y nodejs
		
		
		# java	
		echo "\n----- Installing Java 8 ------\n"
		add-apt-repository ppa:openjdk-r/ppa -y
		apt-get update
		apt-get -y install openjdk-8-jdk
		update-alternatives --config java
		# set the default jdk
		sudo echo "JAVA_HOME=/java/lib/jvm/java-8-openjdk-amd64/" >> "/home/vagrant/.bashrc"
		sudo echo "JAVA_HOME=/java/lib/jvm/java-8-openjdk-amd64/" >> "/root/.bashrc"
		# set hte jdk, all can be listed with "update-java-alternatives --list"
		sudo update-java-alternatives --set java-1.8.0-openjdk-amd64
		
		
		# set the language to German
		apt-get -y install language-pack-de language-pack-de
		localectl set-locale LANG=de_DE.UTF-8 LANGUAGE="de_DE:de"
		update-locale LANG=de_DE
		update-locale LANGUAGE=de_DE
		
		
		# Install xfce and virtualbox additions
		sudo apt-get update
		apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11
		# Permit anyone to start the GUI
		#sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config
		sudo echo "allowed_users=anybody" > /etc/X11/Xwrapper.config
		
		# install the goodies, like terminal copy paste (Middle mouse key is paste, selecting and left-clicking is copy)
		sudo apt-get install -y xfce4-goodies
		
		
		sudo echo "setxkbmap de" >> "/home/vagrant/.bashrc"
		sudo echo "setxkbmap de" >> "/root/.bashrc"
		
		
		# install chrome
		sudo apt-get install -y chromium-browser
		
		
		# install NodeJS
		curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
		sudo apt-get install -y nodejs
			

		
		

		# install git and clone webapp-tutorial
		sudo apt-get install -y git
		cd /home/vagrant
		git clone https://github.com/toedter/webapp-tutorial.git
		sudo chown -R vagrant:vagrant .npm
		
		# pre build the project
		# cd webapp-tutorial
		# ./gradlew prepareJS build --console plain
		
		
		
		# install IntelliJ IDEA  
		sudo wget --quiet -O /opt/ideaIU-no-jdk.tar.gz https://download.jetbrains.com/idea/ideaIU-2017.3.3-no-jdk.tar.gz
		cd /opt/ && sudo tar -zxvf ideaIU-no-jdk.tar.gz
		sudo rm /opt/ideaIU-no-jdk.tar.gz
		sudo chown -R vagrant:vagrant .
		
					
		
		# angular
		sudo npm install --unsafe-perm -g @angular/cli
		
		
		# to install necessary npm modules go to the lab, execute
		# "npm install"
		
		
		# start the GUI
		# login works with vagrant / vagrant
		startx
		
		
		# start the idea ide 
		# sudo bash /home/vagrant/idea*/bin/idea.sh
		
		# check slides under https://speakerdeck.com/toedter/cool-web-apps-with-spring-boot-angular-and-typescript
		
	SHELL
  
end

